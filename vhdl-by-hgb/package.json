{
    "name": "vhdl-by-hgb",
    "displayName": "VHDLbyHGB",
    "publisher": "FH Hagenberg",
    "description": "VS-Code Extension for VHDL",
    "version": "3.3.0",
    "engines": {
        "vscode": "^1.45.0"
    },
    "keywords": [
        "VHDL",
		"vhdl",
		"Hagenberg",
		"FH Hagenberg",
		"Chip Design",
		"language-vhdl",
		"hdl",
		"rust_hdl",
		"ide",
		"vhdl_ls"
    ],
    "main": "./out/extension.js",
    "activationEvents": [
        "onLanguage:vhdl",
		"onCommand:vhdlls.restart",
        "onCommand:VHDLbyHGB.reloadEntities"
    ],
    "categories": [
        "Programming Languages",
        "Snippets",
        "Formatters",
        "Linters",
        "Keymaps"
    ],
    "icon": "resources/images/logo.jpg",
    "repository": {
        "type": "git",
        "url": "https://github.com/jakobjung10/pro4_vhdl_IDE"
    },
    "bugs": {
        "url": "https://github.com/jakobjung10/pro4_vhdl_IDE/issues"
    },
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "vhdlbyhgb-project",
					"title": "VHDL by HGB",
					"icon": "resources/images/sidebar.svg"
                }
            ]
        },
        "views": {
            "vhdlbyhgb-project": [
                {
                    "id": "vhdlbyhgb-view-project",
                    "name": "Projects"
                },
                {
                    "id": "vhdlbyhgb-view-source",
                    "name": "Sources"
                },
                {
                    "id": "vhdlbyhgb-view-dependency",
                    "name": "Dependencies tree"
                },
                {
                    "id": "vhdlbyhgb-view-watcher",
                    "name": "Watchers"
                },
                {
                    "id": "vhdlbyhgb-view-runs",
                    "name": "Runs"
                },
                {
                    "id": "vhdlbyhgb-view-output",
                    "name": "Outputs"
                },
                {
                    "id": "vhdlbyhgb-view-actions",
                    "name": "Actions"
                }
            ]
        },
        "grammars": [
            {
                "language": "vhdl",
                "scopeName": "source.vhdl",
                "path": "./syntaxes/vhdl/vhdl.tmLanguage.json"
            },
            {
                "language": "tcl",
                "scopeName": "source.tcl",
                "path": "./syntaxes/tcl/tcl.tmLanguage.json"
            }
        ],
        "menus": {
            "explorer/context": [],
            "view/title": [],
            "view/item/context": [],
            "editor/title": []
        },
        "commands": [
            {
                "command": "VHDLbyHGB.vhdlls.restart",
                "title": "VHDLbyHGB.VHDL_LS: restart"
            },
            {
                "command": "VHDLbyHGB.vhdlls.activate",
                "title": "VHDLbyHGB.VHDL_LS: activate"
            },
            {
                "command": "VHDLbyHGB.vhdlls.deactivate",
                "title": "VHDLbyHGB.VHDL_LS: deactivate"
            },
            {
                "command": "VHDLbyHGB.ProjectManager.UpdateFiles",
                "title": "VHDLbyHGB.ProjectManager: Update Files"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.AddNewProject",
                "title": "VHDLbyHGB.SynthesisManager.AddNewProject"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.AddExistingProject",
                "title": "VHDLbyHGB.SynthesisManager.AddExistingProject"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.UpdateFiles",
                "title": "VHDLbyHGB.SynthesisManager.UpdateFiles"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.Compile",
                "title": "VHDLbyHGB.SynthesisManager.Compile"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.LaunchGUI",
                "title": "VHDLbyHGB.SynthesisManager.LaunchGUI"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.SetTopLevelEntity",
                "title": "VHDLbyHGB.SynthesisManager.SetTopLevelEntity"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.SetDevice",
                "title": "VHDLbyHGB.SynthesisManager.SetDevice"
            },
            {
                "command": "VHDLbyHGB.SynthesisManager.SetFamily",
                "title": "VHDLbyHGB.SynthesisManager.SetFamily"
            },
            {
                "command": "VHDLbyHGB.reloadEntities",
                "title": "VHDLbyHGB.Reload Entities"
            }

        ],
        "languages": [
            {
                "id": "vhdl",
                "aliases": [
                    "VHDL",
                    "vhdl"
                ],
                "configuration": "./configs/vhdl.configuration.json",
                "extensions": [
                    ".vhd",
                    ".vho",
                    ".vhdl",
                    ".vhd"
                ]
            },
            {
                "id": "tcl",
                "aliases": [
                    "TCL",
                    "tcl"
                ],
                "configuration": "./configs/tcl.configuration.json",
                "extensions": [
                    ".tcl",
                    ".pro"
                ]
            },
            {
                "id": "ucf",
                "aliases": [
                    "vivado ucf",
                    "ucf constraints"
                ],
                "configuration": "./configs/ucfconstraints.configuration.json",
                "extensions": [
                    ".ucf"
                ]
            },
            {
                "id": "xdc",
                "aliases": [
                    "vivado xdc",
                    "xdc constraints"
                ],
                "configuration": "./configs/xdcconstraints.configuration.json",
                "extensions": [
                    ".xdc",
                    ".sdc"
                ]
            },
            {
                "id": "ldc",
                "aliases": [
                    "lattice constraints"
                ],
                "configuration": "./configs/xdcconstraints.configuration.json",
                "extensions": [
                    ".ldc",
                    ".pdc"
                ]
            }
        ],
        "snippets": [
            {
                "language": "vhdl",
                "path": "./snippets/vhdl.json"
            },
            {
                "language": "tcl",
                "path": "./snippets/tcl.json"
            }
        ],
        "configuration": {
			"type": "object",
			"title": "VHDL",
			"properties": {
				"vhdlls.languageServer": {
					"description": "Language server location. Changing this option requires a restart.",
					"type": "string",
					"default": "embedded",
					"enum": [
						"embedded",
						"user",
						"systemPath",
						"docker"
					],
					"enumDescriptions": [
						"Use language server embedded in extension.",
						"Use custom path vhdlls.languageServerUserPath",
						"Run vhdl_ls from system path.",
						"Use kraigher/vhdl_ls:latest image from Docker Hub"
					]
				},
				"vhdlls.languageServerUserPath": {
					"description": "Path to vhdl_ls language server executable, used when vhdlls.languageServer = \"user\"",
					"type": "string"
				},
				"vhdlls.trace.server": {
					"type": "string",
					"scope": "window",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"enumDescriptions": [
						"No traces",
						"Error only",
						"Full log"
					],
					"default": "off",
					"description": "Trace requests to the vhdl_ls language server (this is usually overly verbose and not recommended for regular users)"
				}
			}
		},
        "keybindings": [
            {
                "key": "Ctrl+Alt+S",
                "command": "VHDLbyHGB.reloadEntities",
                "mac": "shift+cmd+s"
            }
        ]
    },
    "scripts": {
        "clean": "shx rm -rf out",
        "vscode:prepublish": "npm run build-prepare & npm run generate-examples & npm run build:syntax & npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint src --ext ts",
        "watch": "npm run build-prepare & npm run generate-examples & tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js",
        "generate-doc": "cd ./resources/project_manager; ./copy_documentation.sh",
        "generate-examples": "cd ./resources/project_manager; ./copy_examples.sh",
        "build-prepare": "cd ./resources/project_manager; ./generate_html.py;"
    },
    "dependencies": {
        "@octokit/rest": "16.36.0",
        "@types/node-fetch": "2.5.7",
        "@types/nunjucks": "^3.1.4",
        "@types/semver": "6.2.0",
        "abort-controller": "3.0.0",
        "extract-zip": "1.6.2",
        "fs-extra": "8.1.0",
        "js-yaml": "^3.13.1",
        "netlistsvg": "https://github.com/TerosTechnology/netlistsvg.git#hierarchy",
        "nunjucks": "^3.2.0",
        "open": "8.3.0",
        "proper-lockfile": "4.1.1",
        "semver": "7.3.5",
        "shelljs": "^0.8.3",
        "temp": "^0.9.0",
        "teroshdl2": "https://github.com/TerosTechnology/colibri.git#dev",
        "colibri2": "https://github.com/TerosTechnology/colibri.git#dev",
        "tmp": "0.2.1",
        "vscode-languageclient": "7.0.0-next.6",
        "walk-file-tree": "^1.0.38",
        "xml2js": "0.4.23",
        "async-mutex": "^0.4.0"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.11.0",
        "@types/vscode": "^1.45.0",
        "@typescript-eslint/eslint-plugin": "^2.30.0",
        "@typescript-eslint/parser": "^2.30.0",
        "eslint": "^6.8.0",
        "glob": "^7.1.6",
        "js-yaml": "^3.13.1",
        "mocha": "^7.1.2",
        "shx": "^0.3.3",
        "typescript": "4.5.5",
        "vscode-test": "^1.3.0"
    }
}
